import { useState } from 'react';
import { useGame } from '../context/GameContext';
import { Card } from './ui/card';
import { Badge } from './ui/badge';
import { Button } from './ui/button';
import { Dialog, DialogContent, DialogHeader, DialogTitle } from './ui/dialog';
import { Input } from './ui/input';
import { Textarea } from './ui/textarea';
import { motion } from 'framer-motion';
import { Clock, Star, Edit3, CheckCircle } from 'lucide-react';
import type { ChangeEvent } from 'react';
import type { Quest } from '../types/game';


const QuestList = () => {
  const { state } = useGame();
  const { quests } = state;
  // Stan do edycji questa
  const [editOpen, setEditOpen] = useState(false);
  // const [editingQuest, setEditingQuest] = useState<Quest | null>(null); // unused
  const [editQuest, setEditQuest] = useState<Quest | null>(null);
  const [editError, setEditError] = useState('');
  const { actions } = useGame();

  const handleEditChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {
    if (!editQuest) return;
    setEditQuest({ ...editQuest, [e.target.name]: e.target.type === 'number' ? Number(e.target.value) : e.target.value });
  };

  const openEditDialog = (quest: Quest) => {
    setEditQuest({ ...quest });
    setEditError('');
    setEditOpen(true);
  };

  const handleEditSave = () => {
    if (!editQuest) return;
    if (!editQuest.title.trim()) {
      setEditError('Title is required');
      return;
    }
    actions.editQuest(editQuest);
    setEditOpen(false);
  };

  return (
    <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.5 }}>
      <Card className="p-6 bg-gradient-to-br from-blue-900/60 to-zinc-900 border-blue-800 text-white shadow-xl shadow-blue-900/30 rounded-2xl overflow-hidden">
        <div className="flex items-center justify-between mb-8 pb-4 border-b border-blue-800/40">
          <div className="flex items-center gap-3">
            <div className="p-2 bg-gradient-to-br from-blue-800/80 to-indigo-900/80 rounded-full shadow-lg border border-blue-700/30">
              <CheckCircle size={24} className="text-blue-300" strokeWidth={2.5} />
            </div>
            <h2 className="text-2xl font-extrabold tracking-tight bg-gradient-to-r from-blue-300 to-cyan-200 bg-clip-text text-transparent">
              Active Quests
            </h2>
          </div>
          <Button 
            className="bg-blue-600 hover:bg-blue-500 text-white font-medium rounded-lg text-sm px-5 py-2.5 flex items-center gap-2 shadow-md border border-blue-500/50 transition-all hover:shadow-blue-500/20"
            onClick={() => window.document.getElementById('add-quest-button')?.click()}
          >
            <span className="text-lg font-bold">+</span> New Quest
          </Button>
        </div>
        <div className="space-y-6 max-h-[calc(100vh-220px)] overflow-y-auto pr-1 custom-scrollbar">
          {quests.length === 0 && <div className="text-gray-400 text-sm py-4 text-center">No quests yet.</div>}
          {quests.map((quest) => (
            <div 
              key={quest.id} 
              className={`relative flex flex-col p-5 gap-4 ${quest.status === 'completed' ? 'bg-zinc-800/30 opacity-75' : 'bg-zinc-800/50'} rounded-xl shadow-lg border border-zinc-700/50 transition-all hover:shadow-blue-900/20 hover:border-blue-500/40 overflow-hidden group`}
            >
              <div className={`absolute top-0 left-0 w-1 h-full ${
                quest.priority === 'urgent' ? 'bg-gradient-to-b from-red-500 to-red-700' : 
                quest.priority === 'high' ? 'bg-gradient-to-b from-orange-500 to-orange-700' :
                quest.priority === 'medium' ? 'bg-gradient-to-b from-yellow-500 to-yellow-700' :
                'bg-gradient-to-b from-green-500 to-green-700'
              }`}></div>
              <div className="flex flex-col space-y-4">
                {/* Top Row - Title & Type */}
                <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-3">
                  <div className="flex flex-col gap-2">
                    <div className="flex items-center gap-2 flex-wrap">
                      <h3 className={`font-bold text-xl ${quest.status === 'completed' ? 'line-through text-zinc-400' : 'text-white drop-shadow-md'}`}>
                        {quest.title}
                      </h3>
                      {quest.type === 'main' && (
                        <Badge className="bg-yellow-600 text-white whitespace-nowrap px-2.5 py-1 text-xs font-medium">
                          Main Quest
                        </Badge>
                      )}
                      {quest.type === 'side' && (
                        <Badge className="bg-blue-600 text-white whitespace-nowrap px-2.5 py-1 text-xs font-medium">
                          Side Quest
                        </Badge>
                      )}
                      {quest.type === 'daily' && (
                        <Badge className="bg-green-600 text-white whitespace-nowrap px-2.5 py-1 text-xs font-medium">
                          Daily Quest
                        </Badge>
                      )}
                      {quest.type === 'weekly' && (
                        <Badge className="bg-purple-600 text-white whitespace-nowrap px-2.5 py-1 text-xs font-medium">
                          Weekly Quest
                        </Badge>
                      )}
                    </div>
                    <div className="flex-shrink-0 flex gap-2">
                      <Badge className="bg-blue-600/80 text-white whitespace-nowrap font-medium flex items-center">
                        <Star size={14} className="mr-1" /> {quest.xpReward} XP
                      </Badge>
                    </div>
                  </div>
                  
                  {/* Description */}
                  <div className={`text-base leading-relaxed bg-zinc-900/70 p-3 rounded-lg border border-zinc-700/30 ${quest.status === 'completed' ? 'text-zinc-500' : 'text-gray-200'} mb-1`}>
                    {quest.description}
                  </div>
                  
                  {/* Quest Details Badges */}
                  <div className="flex flex-wrap gap-2.5 mt-4">
                    <Badge className={`whitespace-nowrap px-3 py-1.5 text-sm font-medium ${
                      quest.priority === 'urgent' ? 'bg-red-900/70 text-red-100 border border-red-700/50' :
                      quest.priority === 'high' ? 'bg-orange-900/70 text-orange-100 border border-orange-700/50' :
                      quest.priority === 'medium' ? 'bg-yellow-900/70 text-yellow-100 border border-yellow-700/50' :
                      'bg-green-900/70 text-green-100 border border-green-700/50'
                    }`}>
                      {quest.priority.charAt(0).toUpperCase() + quest.priority.slice(1)} Priority
                    </Badge>
                    
                    <Badge className="bg-zinc-800/70 text-blue-100 border border-zinc-700/50 flex items-center gap-1.5 whitespace-nowrap px-3 py-1.5 text-sm">
                      <Clock size={14} className="text-blue-300" /> {quest.estimatedTime} minutes
                    </Badge>
                    
                    <Badge className="bg-zinc-800/70 text-yellow-100 border border-zinc-700/50 flex items-center gap-1.5 whitespace-nowrap px-3 py-1.5 text-sm">
                      <Star size={14} className="text-yellow-300" /> Difficulty: {quest.difficultyLevel}
                    </Badge>
                    
                    <Badge className="bg-zinc-800/70 text-cyan-100 border border-zinc-700/50 whitespace-nowrap px-3 py-1.5 text-sm">
                      Energy: {quest.energyRequired}
                    </Badge>
                    
                    <Badge className="bg-zinc-800/70 text-purple-100 border border-zinc-700/50 whitespace-nowrap px-3 py-1.5 text-sm">
                      Anxiety: {quest.anxietyLevel}
                    </Badge>
                    
                    {quest.status === 'completed' && (
                      <Badge className="bg-green-900/70 text-green-100 border border-green-700/50 flex items-center gap-1.5 whitespace-nowrap px-3 py-1.5 text-sm">
                        <CheckCircle size={14} /> Completed
                      </Badge>
                    )}
                    
                    {quest.status === 'active' && (
                      <Badge className="bg-blue-900/70 text-blue-100 border border-blue-700/50 flex items-center gap-1.5 whitespace-nowrap px-3 py-1.5 text-sm">
                        Active
                      </Badge>
                    )}
                  </div>
                  
                  {/* Action Buttons */}
                  <div className="mt-3 md:mt-0 md:ml-4 flex gap-3 justify-end">
                    {quest.status === 'active' && (
                      <Button 
                        size="sm" 
                        variant="default" 
                        className="flex items-center gap-2 bg-green-600 hover:bg-green-500 text-white shadow-md px-4 py-2.5 h-auto border border-green-500/50 rounded-lg transition-all hover:shadow-green-500/20" 
                        onClick={() => actions.completeQuest(quest.id)}
                      >
                        <CheckCircle size={18} /> Complete Quest
                      </Button>
                    )}
                    <Button 
                      size="sm" 
                      variant="outline" 
                      className="flex items-center gap-2 border-blue-500/50 text-blue-300 hover:bg-blue-900/30 hover:text-blue-200 shadow-md px-4 py-2.5 h-auto rounded-lg transition-all hover:border-blue-400 hover:shadow-blue-500/20" 
                      onClick={() => openEditDialog(quest)}
                    >
                      <Edit3 size={18} /> Edit Quest
                    </Button>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </Card>
      
      {/* Edit Quest Dialog */}
      {editOpen && (
        <Dialog open={editOpen} onOpenChange={setEditOpen}>
          <DialogContent className="max-w-md w-full rounded-xl p-6 bg-white dark:bg-zinc-900 shadow-xl">
            <DialogHeader>
              <DialogTitle className="text-lg font-bold mb-2">Edit Quest</DialogTitle>
            </DialogHeader>
            {editQuest && (
              <form className="space-y-4" onSubmit={e => { e.preventDefault(); handleEditSave(); }}>
                <div>
                  <label className="block text-sm font-semibold mb-1">Title</label>
                  <Input name="title" placeholder="Title" value={editQuest.title} onChange={handleEditChange} autoFocus className="h-10" />
                </div>
                <div>
                  <label className="block text-sm font-semibold mb-1">Description</label>
                  <Textarea name="description" placeholder="Description" value={editQuest.description} onChange={handleEditChange} className="min-h-[60px]" />
                </div>
                <div className="flex gap-4">
                  <div className="flex-1">
                    <label className="block text-xs font-medium mb-1">Type</label>
                    <select
                      name="type"
                      value={editQuest.type}
                      onChange={handleEditChange}
                      className="w-full border rounded px-2 py-1 text-sm bg-zinc-50 dark:bg-zinc-800"
                    >
                      <option value="main">Main</option>
                      <option value="side">Side</option>
                      <option value="daily">Daily</option>
                      <option value="weekly">Weekly</option>
                    </select>
                  </div>
                  <div className="flex-1">
                    <label className="block text-xs font-medium mb-1">Priority</label>
                    <select
                      name="priority"
                      value={editQuest.priority}
                      onChange={handleEditChange}
                      className="w-full border rounded px-2 py-1 text-sm bg-zinc-50 dark:bg-zinc-800"
                    >
                      <option value="low">Low</option>
                      <option value="medium">Medium</option>
                      <option value="high">High</option>
                      <option value="urgent">Urgent</option>
                    </select>
                  </div>
                </div>
                <div>
                  <label className="block text-xs font-medium mb-1">XP Reward</label>
                  <Input
                    name="xpReward"
                    type="number"
                    min={1}
                    value={editQuest.xpReward}
                    onChange={handleEditChange}
                    className="h-9"
                  />
                </div>
                {editError && <div className="text-red-500 text-xs mt-1">{editError}</div>}
                <Button type="submit" className="mt-2 w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded h-10">Save Changes</Button>
              </form>
            )}
          </DialogContent>
        </Dialog>
      )}
    </motion.div>
  );
};

export default QuestList;
